(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{564:function(e,a,t){"use strict";t.r(a);var s=t(6),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("AsyncDisplayKit 2.0 Tutorial: Getting Started")])]),e._v(" "),t("h1",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("blockquote",[t("p",[e._v('"艺术是你任何能做到极致的事"')])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://asyncdisplaykit.org/",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("AsyncDisplayKit")]),t("OutboundLink")],1),e._v(" 是一个UI框架，最初诞生于 Facebook 的 "),t("strong",[e._v("Paper")]),e._v(" 应用程序。它是为了解决 Paper 团队面临的核心问题之一：如何尽可能缓解主线程的压力？")]),e._v(" "),t("p",[e._v("现在,许多应用程序的用户体验,很大程度上依赖于持续手势和物理动画。至少,你的UI可能是依赖于某种形式的 "),t("code",[e._v("scrollView")]),e._v("。")]),e._v(" "),t("p",[e._v("这些类型的用户界面完全依赖于主线程，并且对主线程阻塞非常敏感。主线程阻塞将导致丢帧，降低用户的体验。")]),e._v(" "),t("p",[e._v("一些主线程开销较大的任务包括：")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("计算尺寸和布局")]),e._v("：比如  "),t("code",[e._v("-heightForRowAtIndexPath:")]),e._v("，或者在UILbel中调用 "),t("code",[e._v("-sizeThatFits")]),e._v(" 以及"),t("a",{attrs:{href:"http://floriankugler.com/2013/04/22/auto-layout-performance-on-ios/",target:"_blank",rel:"noopener noreferrer"}},[e._v("指数上升"),t("OutboundLink")],1),e._v("的 "),t("code",[e._v("AutoLayout‘s")]),e._v("布局计算。")]),e._v(" "),t("li",[t("strong",[e._v("图像解码")]),e._v("：想要在一个 image view 中使用 "),t("code",[e._v("UIImage")]),e._v("，首先要进行解码。")]),e._v(" "),t("li",[t("strong",[e._v("绘图")]),e._v("：复杂的文本以及手动绘制渐变和阴影。")]),e._v(" "),t("li",[t("strong",[e._v("对象生命周期")]),e._v("：创建，操纵和销毁系统对象（即创建一个UIView）")])]),e._v(" "),t("p",[e._v("当正确使用时,AsyncDisplayKit 允许您在默认情况下异步执行所有测量、布局和渲染。无需任何额外的优化，一个应用程序可以减少约一个数量级的主线程开销。")]),e._v(" "),t("p",[e._v("除了这些性能优势，酷炫的 AsyncDisplayKit 还为开发者提供的便利接口，用简洁的代码就能完成复杂的功能。")]),e._v(" "),t("p",[e._v("在这两部分 "),t("strong",[e._v("AsyncDisplayKit 2.0")]),e._v(" 教程中，你将掌握使用ASDK构建一个实用的和动态的应用程序的所有要素。在第一部分中，你将要学习一些在你构建应用程序时可以用到的宏观思想。在"),t("a",{attrs:{href:"https://www.raywenderlich.com/124696/asyncdisplaykit-2-0-tutorial-automatic-layout",target:"_blank",rel:"noopener noreferrer"}},[e._v("第二部分"),t("OutboundLink")],1),e._v("中，你将学习如何构建自己 node 的 subclass，以及如何使用ASDK强大的布局引擎。为了更好的完成本教程，你需要会使用 Xcode 以及 熟悉 Objective-C。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("免责声明")]),e._v("：ASDK不兼容 "),t("a",{attrs:{href:"http://www.youtube.com/watch?v=RY_X7l1g79Q&feature=youtu.be&t=29m37s",target:"_blank",rel:"noopener noreferrer"}},[e._v("Interface Builder和AutoLayout"),t("OutboundLink")],1),e._v("，因此，您将不会在本教程中使用它们，虽然ASDK完全支持Swift(除了ComponentKit)，许多开发者仍在使用\nObjective-C。免费App排行榜前100大多数都没有使用Swift（至少6个使用ASDK）。出于这些原因，本系列将重点介绍 Objective-C。话虽这么说，我们已经包括了一个Swift版本的实例项目。（嘴上说没有，代码还是很诚实的😂~）")])]),e._v(" "),t("h1",{attrs:{id:"开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[e._v("#")]),e._v(" 开始")]),e._v(" "),t("p",[e._v("首先，"),t("a",{attrs:{href:"https://koenig-media.raywenderlich.com/uploads/2016/12/AsyncDisplayKit-Starter-4.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("下载初始项目"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("该项目使用 "),t("a",{attrs:{href:"https://cocoapods.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CocoaPods"),t("OutboundLink")],1),e._v(" 来拉入AsyncDisplayKit。所以，在正常的 CocoaPods 体系下，打开 "),t("code",[e._v("RainforestStarter.xcworkspace")]),e._v(" 而不是"),t("code",[e._v("RainforestStarter.xcodeproj")]),e._v("。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v("：需要网络连接才能完成本教程。")])]),e._v(" "),t("p",[e._v("构建并运行以查看包含 "),t("code",[e._v("UITableView")]),e._v(" 动物列表的应用程序。如果你看过了代码，"),t("code",[e._v("AnimalTableController")]),e._v(" 你会发现这是一个正常且熟悉的 "),t("code",[e._v("UITableViewController")]),e._v(" 类。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v("：确保在真机上运行本教程中的代码，而不是在模拟器中运行。")])]),e._v(" "),t("p",[e._v("向上滑动你将看到帧数丢失引起的卡顿。你不需要启动控制台，以便能发现到这个应用程序需要在性能方面上的一些优化。")]),e._v(" "),t("p",[e._v("你可以通过 "),t("strong",[e._v("AsyncDisplayKit")]),e._v(" 的力量来解决这个问题")]),e._v(" "),t("h1",{attrs:{id:"asdisplaynode-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asdisplaynode-简介"}},[e._v("#")]),e._v(" ASDisplayNode 简介")]),e._v(" "),t("p",[t("code",[e._v("ASDisplayNode")]),e._v(" 是ASDK的核心类，它只是一个类似于 MVC 中的 “View” 一样的"),t("code",[e._v("UIView")]),e._v(" 或 "),t("code",[e._v("CALayer")]),e._v("。认识一个 node 的最佳方法是参照你已经熟悉的 "),t("code",[e._v("UIViews")]),e._v(" 和 "),t("code",[e._v("CALayers")]),e._v(" 之间的关系。")]),e._v(" "),t("p",[e._v("记住，iOS应用程序中的所有在屏幕上的显示都通过"),t("code",[e._v("CALayer")]),e._v("对象表示的。"),t("code",[e._v("UIViews")]),e._v(" 创建并且拥有一个底层的 "),t("code",[e._v("CALayer")]),e._v("，并为他们添加触摸处理和其他交互功能。"),t("code",[e._v("UIView")]),e._v(" 并不是 "),t("code",[e._v("CALayer")]),e._v(" 的子类，而是相互环绕，扩展其功能。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/03/view-layer-480x229.png",alt:""}})]),e._v(" "),t("p",[e._v("这种抽象的情况下扩展 "),t("code",[e._v("ASDisplayNode")]),e._v("：您可以将它们视为包装一个 view，就像在 view 上添加一个 layer 一样。")]),e._v(" "),t("p",[e._v("通常由 Node 创建的一个常规的view，其创建和配置都在行队列中执行，并且异步渲染。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/03/node-view-layer-480x161.png",alt:""}})]),e._v(" "),t("p",[e._v("幸运的是，用于处理 Node 的 API 对于任何使用过的 "),t("code",[e._v("UIViews")]),e._v(" 或者 "),t("code",[e._v("CALayers")]),e._v(" 的人来说应该异常的熟悉。所有 View 的属性都可以等效为 Node 类。你可以访问基础的 view 或者 layer 本身，就像是访问 "),t("code",[e._v("view.layer")]),e._v(" 一样")]),e._v(" "),t("h1",{attrs:{id:"节点容器-the-node-containers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点容器-the-node-containers"}},[e._v("#")]),e._v(" 节点容器（The Node Containers）")]),e._v(" "),t("p",[e._v("虽然 Node 本身提供了巨大的性能改进的可能，但真正的强大的是它们与四个容器类结合使用时产生的黑魔法。")]),e._v(" "),t("p",[e._v("这些类包括：")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("ASViewController")]),e._v("：一个 "),t("code",[e._v("UIViewController")]),e._v(" 的子类，允许你提供要管理的 Node。")]),e._v(" "),t("li",[t("strong",[e._v("ASCollectionNode")]),e._v(" and "),t("strong",[e._v("ASTableNode")]),e._v("：Node 等效于 "),t("code",[e._v("UICollectionView")]),e._v(" 和 "),t("code",[e._v("UITableView")]),e._v("，其子类实际上保留在底层。")]),e._v(" "),t("li",[t("strong",[e._v("ASPagerNode")]),e._v(":一个"),t("code",[e._v("ASCollectionNode")]),e._v("的子类，提供极好的滑动性能相比与 "),t("code",[e._v("UIKit")]),e._v(" 的 "),t("code",[e._v("UIPageViewController")]),e._v(" 来说。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/03/ragecomic-480x229.png",alt:""}})]),e._v(" "),t("p",[e._v("说得好，但真正的黑魔法来自 "),t("code",[e._v("ASRangeController")]),e._v(" 这些类用于影响所包含的 Node 的行为。现在，跟着我并把你们的脑袋放空吧~")]),e._v(" "),t("h1",{attrs:{id:"tablenode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tablenode"}},[e._v("#")]),e._v(" TableNode")]),e._v(" "),t("p",[e._v("你要做的第一件事就是将当前 TableView 替换为 TableNode。这个没什么难度。")]),e._v(" "),t("h4",{attrs:{id:"将-tableview-替换为-tablenode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将-tableview-替换为-tablenode"}},[e._v("#")]),e._v(" 将 TableView 替换为 TableNode")]),e._v(" "),t("p",[e._v("首先，进入到 "),t("code",[e._v("AnimalTableController.m")]),e._v(" 。在此类中添加下面代码下面代码。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("#import <AsyncDisplayKit/AsyncDisplayKit.h>\n")])])]),t("p",[e._v("这就导入了 ASDK 框架。")]),e._v(" "),t("p",[e._v("然后，我们继续，替换 "),t("code",[e._v("tableView")]),e._v(" 的声明属性 ：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("@property  （ strong，nonatomic ） UITableView * tableView;\n")])])]),t("p",[e._v("替换为 "),t("code",[e._v("tableNode")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("@property  （ strong，nonatomic ） ASTableNode * tableNode;\n")])])]),t("p",[e._v("这将导致这个类中很多地方报错，但不要慌张！")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/03/butBut-1-480x229.png",alt:""}})]),e._v(" "),t("p",[e._v("别担心。这些错误和警告将作为你的向导，将代码转换成我们想要的。")]),e._v(" "),t("p",[t("code",[e._v("-viewDidLoad")]),e._v(" 中的报错是理所当然，因为 "),t("code",[e._v("tableView")]),e._v(" 已经被替换掉。我不会让你通过 "),t("code",[e._v("tableNode")]),e._v(" 替换 所有的 "),t("code",[e._v("tableView")]),e._v(" 实例（我的意思是，查找和替换并非那么难），但是如果你做了，你会看到：")]),e._v(" "),t("ol",[t("li",[e._v("你应该为 "),t("code",[e._v("ASTableNode")]),e._v(" 分配一个属性。")]),e._v(" "),t("li",[e._v("table Node  没有调用 "),t("code",[e._v("-registerClass:forCellReuseIdentifier:")]),e._v(" 方法。")]),e._v(" "),t("li",[e._v("你不能添加一个 node 到 subview")])]),e._v(" "),t("p",[e._v("此时，你应该将 "),t("code",[e._v("-viewDidLoad")]),e._v(" 中的方法替换为：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("- (void)viewDidLoad {\n  [super viewDidLoad];\n \n  [self.view addSubnode:self.tableNode];\n  [self applyStyle];\n}\n")])])]),t("p",[e._v("这里要注意一个有趣的情况，你调用的是 UIView 的一个 "),t("code",[e._v("-addSubnode:")]),e._v(" 方法，该方法是通过 category 添加到 "),t("code",[e._v("UIView")]),e._v(" 上的，等效于:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("[self.view addSubview:self.tableNode.view];\n")])])]),t("p",[e._v("接下来，修改 "),t("code",[e._v("-viewWillLayoutSubviews")]),e._v(" 中的代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("- (void)viewWillLayoutSubviews {\n  [super viewWillLayoutSubviews];\n \n  self.tableNode.frame = self.view.bounds;\n}\n")])])]),t("p",[e._v("这样就替换用 "),t("code",[e._v("self.tableNode")]),e._v(" 替换了 "),t("code",[e._v("self.tableView")]),e._v("，并且设置了 table 的 Frame")]),e._v(" "),t("p",[e._v("继续修改 "),t("code",[e._v("-applyStyle")]),e._v(" 方法中的代码为：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("- (void)applyStyle {\n  self.view.backgroundColor = [UIColor blackColor];\n  self.tableNode.view.separatorStyle = UITableViewCellSeparatorStyleNone;\n}\n")])])]),t("p",[e._v("这是唯一设置 table 的 "),t("code",[e._v("separatorStyle")]),e._v(" 的一行代码。注意 tableNode 的 view 是如何访问 table 的 "),t("code",[e._v("separatorStyle")]),e._v(" 属性的。"),t("code",[e._v("ASTableNode")]),e._v(" 不会暴露所有"),t("code",[e._v("UITableView")]),e._v("的的属性，所以你必须通过 tableNode 底层的 "),t("code",[e._v("UITableView")]),e._v(" 实例去设置 "),t("code",[e._v("UITableView")]),e._v(" 的特殊属性。")]),e._v(" "),t("p",[e._v("然后，在 "),t("code",[e._v("-initWithAnimals:")]),e._v(" 方法中添加。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("_tableNode = [[ASTableNode alloc] initWithStyle:UITableViewStylePlain];\n")])])]),t("p",[e._v("并且在 "),t("strong",[e._v("return")]),e._v(" 之前，调用：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("[self wireDelegation];\n")])])]),t("p",[e._v("这就会在初始化 "),t("code",[e._v("AnimalTableController")]),e._v(" 的时候，创建了一个 tableNode 并且调用 "),t("code",[e._v("-wireDelegation")]),e._v(" 方法 设置 tableNode 的 代理。")]),e._v(" "),t("h4",{attrs:{id:"设置-tablenode-的-datasource-delegate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置-tablenode-的-datasource-delegate"}},[e._v("#")]),e._v(" 设置  TableNode 的 DataSource & Delegate")]),e._v(" "),t("p",[e._v("类似于 "),t("code",[e._v("UITableView")]),e._v("，"),t("code",[e._v("ASTableNode")]),e._v(" 也使用 DataSource 和 Delegate 来设置本身。TableNode 的"),t("code",[e._v("ASTableDataSource")]),e._v(" 和 "),t("code",[e._v("ASTableDelegate")]),e._v(" protocols 非常类似于 "),t("code",[e._v("UITableViewDataSource")]),e._v(" 和 "),t("code",[e._v("UITableViewDelegate")]),e._v("。")]),e._v(" "),t("p",[e._v("事实上，虽然他们定义了一些完全相同的方法，如 "),t("code",[e._v("-tableNode:numberOfRowsInSection:")]),e._v("，但两组协议也不完全相同，因为 "),t("code",[e._v("ASTableNode")]),e._v(" 行为和"),t("code",[e._v("UITableView")]),e._v("还以所有不同的。")]),e._v(" "),t("p",[e._v("找到 "),t("code",[e._v("-wireDelegation")]),e._v(" 方法， 并用 "),t("code",[e._v("tableNode")]),e._v(" 替换 "),t("code",[e._v("tableView")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("- (void)wireDelegation {\n  self.tableNode.dataSource = self;\n  self.tableNode.delegate = self;\n}\n")])])]),t("p",[e._v("现在， 你会收到警告, "),t("code",[e._v("AnimalTableController")]),e._v(" 实际上不符合协议。目前，"),t("code",[e._v("AnimalTableController")]),e._v(" 仅遵循 "),t("code",[e._v("UITableViewDataSource")]),e._v(" 和 "),t("code",[e._v("UITableViewDelegate")]),e._v("协议。在下面的章节中，我们将遵循这些协议，使我们能够使用 tableNode 的功能。")]),e._v(" "),t("h4",{attrs:{id:"遵循-astabledatasource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遵循-astabledatasource"}},[e._v("#")]),e._v(" 遵循 ASTableDataSource")]),e._v(" "),t("p",[e._v("在 "),t("code",[e._v("AnimalTableController.m")]),e._v(" 开头的地方找到 "),t("code",[e._v("AnimalTableController")]),e._v(" 的 "),t("code",[e._v("DataSource")]),e._v(" 扩展声明：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@interface")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("AnimalTableController")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("DataSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("UITableViewDataSource"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@end")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("用 "),t("code",[e._v("ASTableDataSource")]),e._v(" 替换 "),t("code",[e._v("UITableViewDataSource")]),e._v("为：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("@interface AnimalTableController (DataSource)<ASTableDataSource>\n@end\n")])])]),t("p",[e._v("现在，"),t("code",[e._v("AnimalTableController")]),e._v(" 已经遵循了 "),t("code",[e._v("AnimalTableController")]),e._v(" 协议。本就该如此了。")]),e._v(" "),t("p",[e._v("导航到 "),t("code",[e._v("AnimalTableController.m")]),e._v(" 的底部并找到 "),t("code",[e._v("DataSource")]),e._v(" category 的实现。")]),e._v(" "),t("p",[e._v("首先，将 "),t("code",[e._v("UITableViewDataSource")]),e._v(" 的 "),t("code",[e._v("-tableView:numberOfRowsInSection:")]),e._v("方法，\n更改为"),t("code",[e._v("ASTableDataSource")]),e._v(" 的版本。")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASTableNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode numberOfRowsInSection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("section "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("接着，"),t("code",[e._v("ASTableNodes")]),e._v(" 的 cells 会以不同于 "),t("code",[e._v("UITableView")]),e._v(" 的方式返回。用下面的代码替换 "),t("code",[e._v("-tableView:cellForRowAtIndexPath:")]),e._v(" 以适应新的规则。")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASCellNodeBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASTableView "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableView nodeBlockForRowAtIndexPath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSIndexPath "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("indexPath "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 2")]),e._v("\n  RainforestCardInfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("animal "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("indexPath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("row"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 3 return ASCellNodeBlock")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 4")]),e._v("\n    CardNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("cardNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("CardNode alloc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" initWithAnimal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("animal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//You'll add something extra here later...")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" cardNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br")])]),t("p",[e._v("让我们整理一下：")]),e._v(" "),t("ol",[t("li",[e._v("ASDK 中的 "),t("code",[e._v("ASCellNode")]),e._v(" 等价于 "),t("code",[e._v("UITableViewCell")]),e._v(" 或者 "),t("code",[e._v("UICollectionViewCell")]),e._v("。要注意的是这个方法返回的是一个 "),t("code",[e._v("ASCellNodeBlock")]),e._v("，"),t("code",[e._v("ASTableNode")]),e._v(" 维持着内部所有的 Cell，每个 indexPath 对应一个 block，并且随时准备进行初始化。")]),e._v(" "),t("li",[e._v("你的首要任务是通过数据模型构建cell。这是非常重要的一步，要注意！你获取数据后在 下面的 block 处理。不要在 block 里引用"),t("code",[e._v("indexPath")]),e._v(",以防止 block 运行前的数据变动。")]),e._v(" "),t("li",[e._v("然后返回一个 block，其返回值必须为 "),t("code",[e._v("ASCellNode")]),e._v("。")]),e._v(" "),t("li",[e._v("没有必要担心Cell的复用以及初始化一个Cell的方法。您可能会注意到您现在返回了"),t("code",[e._v("CardNode")]),e._v("，而不是"),t("code",[e._v("CardCell")]),e._v("。")])]),e._v(" "),t("p",[e._v("这让我想到一个重要的点。或许你已经了解到，"),t("strong",[e._v("使用 ASDK 不需要复用 cell")]),e._v("，好吧，我已经说了两遍了，但能记住就好。请随意删除顶部"),t("code",[e._v("kCellReuseIdentifier")]),e._v("的定义吧")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" NSString "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("kCellReuseIdentifier "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('@"CellReuseIdentifier"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("你不必再担心 "),t("code",[e._v("-prepareForReuse")]),e._v("了")]),e._v(" "),t("h4",{attrs:{id:"遵循-astabledelegate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遵循-astabledelegate"}},[e._v("#")]),e._v(" 遵循 ASTableDelegate")]),e._v(" "),t("p",[e._v("在 "),t("code",[e._v("AnimalTableController.m")]),e._v(" 顶部，找到以下Delegate类别接口声明：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@interface")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("AnimalTableController")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Delegate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("UITableViewDelegate"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@end")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("用 "),t("code",[e._v("ASTableDelegate")]),e._v(" 替换 "),t("code",[e._v("UITableViewDelegate")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@interface")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("AnimalTableController")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Delegate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("ASTableDelegate"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@end")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("现在 "),t("code",[e._v("AnimalTableController")]),e._v(" 已经遵循了 "),t("code",[e._v("ASTableDelegate")]),e._v("，是时候做处理了。在 "),t("code",[e._v("AnimalTableController.m")]),e._v(" 底部找到 "),t("code",[e._v("Delegate")]),e._v(" 分类的实现。")]),e._v(" "),t("p",[e._v("我们都知道，每个 "),t("code",[e._v("UITableView")]),e._v(" 至少都要提供一个 "),t("code",[e._v("-tableView:heightForRowAtIndexPath:")]),e._v(" 实现方法，因为每个 cell 的高度都由代理计算和返回。")]),e._v(" "),t("p",[t("code",[e._v("ASTableDelegate")]),e._v(" 中没有 "),t("code",[e._v("-tableView:heightForRowAtIndexPath:")]),e._v("。再 ASDK 中，所有的 "),t("code",[e._v("ASCellNode")]),e._v(" 都负责确定自己的大小。你可以选择为单元格定义最小和最大尺寸，而不是提供静态高度。这种情况下，你希望每个cell的高度至少为屏幕的 2／3。")]),e._v(" "),t("p",[e._v("现在不用担心太多，这个会在第二部分中介绍。")]),e._v(" "),t("p",[e._v("现在只需要替换 "),t("code",[e._v("-tableView:heightForRowAtIndexPath:")]),e._v("为:")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASSizeRange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableView"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASTableView "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode \n  constrainedSizeForRowAtIndexPath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSIndexPath "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("indexPath "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  CGFloat width "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("UIScreen mainScreen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("bounds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("width"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  CGSize min "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("CGSizeMake")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("width"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("UIScreen mainScreen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("bounds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("height"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  CGSize max "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("CGSizeMake")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("width"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" INFINITY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ASSizeRangeMake")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("min"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("经过我们的辛勤劳动，重新编译、运行项目，看看发生了什么。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/06/InfiniteScrollingGif.gif",alt:""}})]),e._v(" "),t("p",[e._v("真是一个流畅的 "),t("code",[e._v("tableView")]),e._v("！一旦你开始做了，那就让我们做的更好吧！")]),e._v(" "),t("h2",{attrs:{id:"无限滚动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无限滚动"}},[e._v("#")]),e._v(" 无限滚动")]),e._v(" "),t("p",[e._v("在大多数应用中，服务器的数据点的个数往往会多于当前 tableView 中显示的单元格数量。这意味着，你必须通过某些手段做无缝处理，以便用户刷完当前数据列表时从服务端加载新的数据。")]),e._v(" "),t("p",[e._v("很多时候，这是通过手动观察滚动视图方法中的内容偏移来处理 "),t("code",[e._v("scrollViewDidScroll:")]),e._v(", 使用 ASDK， 有一种更具说明性的处理方式。相反的，你可以预先确定好你需要加载的页数。")]),e._v(" "),t("p",[e._v("你要做的第一件事是取消已经存在的方法的注释。在 "),t("code",[e._v("AnimalTableController.m")]),e._v(" 的结尾，取消 "),t("code",[e._v("Helpers")]),e._v(" 分类中的两个方法。你可以认为 "),t("code",[e._v("-retrieveNextPageWithCompletion:")]),e._v(" 是你的网络调用，而 "),t("code",[e._v("-insertNewRowsInTableNode:")]),e._v(" 是个非常典型的再表中添加新的元素的方法。")]),e._v(" "),t("p",[e._v("接下来，在 "),t("code",[e._v("-viewDidLoad")]),e._v(" 添加：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("tableNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("view"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("leadingScreensForBatching "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// overriding default of 2.0")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("设置 "),t("code",[e._v("leadingScreensForBatching")]),e._v(" 为 "),t("strong",[e._v("1.0")]),e._v(" 意味着当用户滑动一个屏的时候，就会载入新的数据。")]),e._v(" "),t("p",[e._v("继续，在 "),t("code",[e._v("Delegate")]),e._v(" 分类中实现：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("BOOL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("shouldBatchFetchForTableNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASTableNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" YES"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("该方法用于告诉 "),t("code",[e._v("tableView")]),e._v(" 是否继续请求新的数据。如果返回 "),t("code",[e._v("NO")]),e._v("，则在到达 API 数据末尾时，不会再不会发出任何请求。")]),e._v(" "),t("p",[e._v("因为你希望无限滚动，那就返回 "),t("code",[e._v("YES")]),e._v("，以确保总是请求新的数据。")]),e._v(" "),t("p",[e._v("接下来，还要添加：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASTableNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("tableNode willBeginBatchFetchWithContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASBatchContext "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("context "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//1")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),e._v(" retrieveNextPageWithCompletion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("^")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//2")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),e._v(" insertNewRowsInTableNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//3")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("context completeBatchFetching"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("YES"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[e._v("该方法在用户滑动到 table 的末端并，且 "),t("code",[e._v("-shouldBatchFetchForTableNode:")]),e._v(" 方法返回 "),t("code",[e._v("YES")]),e._v(" 时被调用。")]),e._v(" "),t("p",[e._v("让我们回顾下上面的章节：")]),e._v(" "),t("ol",[t("li",[e._v("首先，你要请求新的 animals 数据来展示。通常是通过 API 来获取的一组array。")]),e._v(" "),t("li",[e._v("完成后，用新下载的数据更新 tableView")]),e._v(" "),t("li",[e._v("最后，确保 "),t("code",[e._v("-completeBatchFetching:")]),e._v("返回的是"),t("code",[e._v("YES")]),e._v("，即大功告成。在完成操作之前，不会进行新的数据请求。")])]),e._v(" "),t("p",[e._v("Build and Run，并且不停的滚呀滚。你将会看到不停的看到一只鸟，他们是无限的。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/06/InfiniteScrollingGif.gif",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"智能预加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#智能预加载"}},[e._v("#")]),e._v(" 智能预加载")]),e._v(" "),t("p",[e._v("你在工作中是否曾经遇到需要预先加载内容到 scrollView 或者 pageView 控制器中？也许你正在处理一个充满屏幕 image ，并且总是希望在接下来的几张图片加载时处于等待状态，所以用户很少看到占位符。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/03/iThinkIveGotThis-480x229.png",alt:""}})]),e._v(" "),t("p",[e._v("当你再这样的体系下工作时，你很快就会意识到有很多问题要考虑。")]),e._v(" "),t("ul",[t("li",[e._v("你占用了多少内存")]),e._v(" "),t("li",[e._v("你应该提前多久加载内容")]),e._v(" "),t("li",[e._v("你决定什么时候忽略用户的交互反映")])]),e._v(" "),t("p",[e._v("并且当你考虑到多个维度的内容时，将些问题将会变得更加复杂。假设你有一个"),t("code",[e._v("pageViewController")]),e._v("，里面每个 "),t("code",[e._v("viewController")]),e._v(" 都带有一个 "),t("code",[e._v("collectionView")]),e._v("。现在，你就需要考虑如何在两个方向上动态加载内容。同时，还要对每个设备进行优化。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/12/officespaceboss.png",alt:""}})]),e._v(" "),t("p",[e._v("还记得告诉你 "),t("code",[e._v("ASRangeController")]),e._v(" 是不重要的吗？现在，这将是我们的重点。")]),e._v(" "),t("p",[e._v("在每个容器类中，所有包含的 node 都有一个接口状态的概念。在任何给定的时间，一个 node 可以是下面的任意组合：")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Preload Range（预载范围）")]),e._v("：通常最远的范围从可见区域。这是当cell的每个 subNode （例如ASNetworkImageNode） 的内容从外源加载，例如API和本地缓存。这与批量获取时，使用用模型对象代表cell本身形成对比。")]),e._v(" "),t("li",[t("strong",[e._v("Display Range（显示范围）")]),e._v("：在这里进行显示任务，例如文本绘制和进行图像解码。")]),e._v(" "),t("li",[t("strong",[e._v("Visible Range（可见范围）")]),e._v("：此时，node 至少有一个像素在屏幕上。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/12/preloadingRanges-small.png",alt:""}})]),e._v(" "),t("p",[e._v("这些范围也适用于 "),t("strong",[e._v("screenfuls")]),e._v(" 的度量，并且可以使用 "),t("code",[e._v("ASRangeTuningParameters")]),e._v(" 属性轻松调整。")]),e._v(" "),t("p",[e._v("例如：你正在使用一个 "),t("code",[e._v("ASNetworkImageNode")]),e._v("在 gallery 的每个页面中展示图像，当每个cell进入 "),t("strong",[e._v("Preload Range")]),e._v(" 时，会发送网络请求，并且在进入 "),t("strong",[e._v("Display Range")]),e._v(" 时进行图像解码。")]),e._v(" "),t("p",[e._v("通常来说，你不必对这些 "),t("strong",[e._v("Ranges")]),e._v(" 太较真。利用好已有的组件，如："),t("code",[e._v("ASNetworkImageNode")]),e._v(" 和 "),t("code",[e._v("ASTextNode")]),e._v("，通常来说你将会获得极大的便利。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v(": 有件不明显的事，这些 "),t("strong",[e._v("Ranges")]),e._v(" 不是堆栈的。相反，它们会在\n"),t("strong",[e._v("Visible Range")]),e._v(" 上重叠和汇聚。如果将显示和预取都设置为一个屏幕，则它们将完全相同。通常数据需要存在才能显示，所以一般预取范围应该稍大一点。那么在 node 到达该范围时，就可以开始显示。")])]),e._v(" "),t("p",[e._v("通常，该范围的前侧大于后侧。当用户改变其滚动方向时，范围的大小也是相反的，以便于对应用户实际移动的方向。")]),e._v(" "),t("h2",{attrs:{id:"node接口的状态回调"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node接口的状态回调"}},[e._v("#")]),e._v(" Node接口的状态回调")]),e._v(" "),t("p",[e._v("你可能会疑惑：这些 "),t("strong",[e._v("Ranges")]),e._v(" 是如何正确工作的？很高兴你这样问~")]),e._v(" "),t("p",[e._v("系统中的每个 node 都有一个"),t("code",[e._v("interfaceState")]),e._v(" 属性，是一个带有字段（(NS_OPTION）"),t("code",[e._v("ASInterfaceState")]),e._v("类型。"),t("code",[e._v("ASRangeController")]),e._v(" 负责管理 "),t("code",[e._v("ASCellNode")]),e._v(" 在 "),t("code",[e._v("scrolView")]),e._v(" 上的移动，每个subNode 都由一个 "),t("code",[e._v("interfaceState")]),e._v(" 属性做对应的更新。这意味着即使时 tree 中最深的 nodes 也可以相应 "),t("code",[e._v("interfaceState")]),e._v(" 的变化。")]),e._v(" "),t("p",[e._v("幸运的是，我们很少需要直接去操作 node 的 "),t("code",[e._v("interfaceState")]),e._v(" 上的 二进制位。更常见的做法时，你只需要对某 node 的特定的状态进行更改。这就是接口的状态回调。")]),e._v(" "),t("h4",{attrs:{id:"node-命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-命名"}},[e._v("#")]),e._v(" Node 命名")]),e._v(" "),t("p",[e._v("为了看到一个 node 的各种状态，给它命名时很有必要的。这样，你就可以监测每个 node 的数据加载、内容成、屏幕展示以及所以的事情。")]),e._v(" "),t("p",[e._v("回到代码"),t("code",[e._v("-tableNode:nodeBlockForRowAtIndexPath:")]),e._v(",添加一句注释")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("//You'll add something extra here later...\n")])])]),t("p",[e._v("在它的下面，给 "),t("code",[e._v("cardNode")]),e._v(" 添加一个 "),t("code",[e._v("debugName")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[e._v("cardNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("debugName "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("NSString stringWithFormat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('@"cell %zd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" indexPath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("row"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"观察-cells"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#观察-cells"}},[e._v("#")]),e._v(" 观察 Cells")]),e._v(" "),t("p",[e._v("进入 "),t("code",[e._v("CardNode_InterfaceCallbacks.m")]),e._v(" 中，你可以找到六种追踪 node 在 ranges 中的状态的方法。取消注释，Build and Run。打开你的控制台，然后慢慢滑动 table。对照你的滑动，观察cell在对应的状态变化。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v("： 大多数情况下，你只要关心 "),t("code",[e._v("-didEnterVisibleState")]),e._v(" 或 "),t("code",[e._v("-didExitVisibleState")]),e._v(" 方法对 "),t("code",[e._v("ASInterfaceState")]),e._v(" 的改变。或者说，已经为你做好了许多引擎。你可以查看 "),t("code",[e._v("ASNetworkImageNode")]),e._v(" 中的代码，看看你集成的通过"),t("code",[e._v("Preload")]),e._v(" 和 "),t("code",[e._v("Display")]),e._v(" 状态实现的功能。 所有 node 网络图片的请求和解码，以及内存的释放都是自动完成，不费吹灰之力。")])]),e._v(" "),t("h2",{attrs:{id:"智能预加载-续"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#智能预加载-续"}},[e._v("#")]),e._v(" 智能预加载（续）")]),e._v(" "),t("p",[e._v("在 "),t("strong",[e._v("2.0")]),e._v(" 版本中，已经介绍了多个维度上智能与加载的概念。假设你有一个竖直滚动的"),t("code",[e._v("tableView")]),e._v("，在其中某些Cell包含了水平滚动的 "),t("code",[e._v("collectionView")]),e._v("。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://koenig-media.raywenderlich.com/uploads/2016/07/proaldGif%5E2.gif",alt:""}})]),e._v(" "),t("p",[e._v("尽管现在的技术能够实现，但你不会希望在到达可见区域之前预先加载全部的 collection。相反的，两个方向上的 scrollView 都由各自的 "),t("code",[e._v("ASRangeController")]),e._v(" 单独控制自己的 range 参数。")]),e._v(" "),t("h2",{attrs:{id:"来到二次元"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#来到二次元"}},[e._v("#")]),e._v(" 来到二次元")]),e._v(" "),t("p",[e._v("现在，你已经有了完整的 "),t("code",[e._v("AnimalTableController")]),e._v("， 你可以把它做为 ASPagerNode 的一个page。")]),e._v(" "),t("p",[e._v("项目已经提前写好了控制器的代码，首先进入 "),t("strong",[t("code",[e._v("AppDelegate.m")])]),e._v("。")]),e._v(" "),t("p",[e._v("找到 "),t("code",[e._v("-installRootViewController")]),e._v(" 的下面代码：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[e._v("AnimalTableController "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("vc "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("AnimalTableController alloc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" \n                              initWithAnimals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("RainforestCardInfo allAnimals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("替换为：")]),e._v(" "),t("div",{staticClass:"language-obcj line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("AnimalPagerController *vc = [[AnimalPagerController alloc] init];\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("然后，跳到 "),t("strong",[t("code",[e._v("AnimalPagerController.m")])]),e._v(" 在 "),t("code",[e._v("-init")]),e._v(" 方法中添加创建 "),t("code",[e._v("pager")]),e._v(" 方法以及 "),t("code",[e._v("dataSource")]),e._v(" 的数据源：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[e._v("_pagerNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("ASPagerNode alloc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" init"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n_pagerNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("dataSource "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("pagerNode 是 "),t("code",[e._v("ASCollectionNode")]),e._v(" 的子类，使用方法与 "),t("code",[e._v("UIPageViewController")]),e._v(" 一样。API 实际上比 "),t("code",[e._v("UIPageViewController")]),e._v(" 要简单的多。")]),e._v(" "),t("p",[e._v("接下来要实现 pager 的 "),t("code",[e._v("dataSource")]),e._v(" 方法，在底部找到 "),t("code",[e._v("ASPagerDataSource")]),e._v(" 分类.")]),e._v(" "),t("p",[e._v("首先，告诉 pager 有几个页面。实际上当前的 animal 数组中有三组不同动物，我们需要重写 "),t("code",[e._v("-numberOfPagesInPagerNode:")]),e._v("方法：")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("numberOfPagesInPagerNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASPagerNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("pagerNode "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("然后，你需要实现 "),t("code",[e._v("-pagerNode:nodeAtIndex")]),e._v(" 方法，类似于先前实现的 ASTableNode 的 "),t("code",[e._v("dataSource")]),e._v(" 方法。")]),e._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASCellNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("pagerNode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ASPagerNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("pagerNode nodeAtIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("NSInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("index "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 1")]),e._v("\n    NSArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("animals "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 2")]),e._v("\n    ASCellNode "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("node "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("ASCellNode alloc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" initWithViewControllerBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("^")]),e._v("UIViewController "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" _Nonnull"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("AnimalTableController alloc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" initWithAnimals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("animals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" didLoadBlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("p",[e._v("我们来总结下这部分：")]),e._v(" "),t("ol",[t("li",[e._v("尽管这个版本中没有进行模块化分，但是首先获取数据模型是个好习惯。")]),e._v(" "),t("li",[e._v("这一次，你使用的正是强大的 "),t("code",[e._v("-initWithViewControllerBlock:")]),e._v(" 构造器。你所要做的就是返回一个block，这个 block 返回你提前设置好的 tableNodeController，它将自动展示在pager 的 页面中。真是太酷了😏~")])]),e._v(" "),t("p",[e._v("一旦你添加了这个方法，你将拥有一个完整功能的 Pagar，其中的 cell 是从你原先创建的 "),t("code",[e._v("tableNodeController")]),e._v(" 生成的。现在，就可以在用户的垂直和水平滑动下，充分发挥二维预加载的功能！")]),e._v(" "),t("p",[e._v("要查看这个 AsyncDisplayKit 2.0 教程完整的项目，"),t("a",{attrs:{href:"https://koenig-media.raywenderlich.com/uploads/2016/12/AsyncDisplayKit-Finished-4.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("点击这里进行下载"),t("OutboundLink")],1),e._v("。如果你想查看swift版本，"),t("a",{attrs:{href:"https://koenig-media.raywenderlich.com/uploads/2016/12/RainForestSwift-1.zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里也有"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("准备好之后，请转到该项目的第2部分，了解 AsyncDisplayKit 2.0 引入的强大的新的布局系统。")]),e._v(" "),t("p",[e._v("如果你想先进行深入了解，你可以阅读 "),t("a",{attrs:{href:"https://asyncdisplaykit.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AsyncDisplayKit主页"),t("OutboundLink")],1),e._v(" 的文档。Scott Goodson（AsyncDisplayKit的原创作者）也有几个你可能会感兴趣的话题。最近的话题很好的概述了一些框架对处理大图片存在问题的的尝试。")]),e._v(" "),t("p",[e._v("你可能会对 "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=OiY1cheLpmI",target:"_blank",rel:"noopener noreferrer"}},[e._v("Paper的构建"),t("OutboundLink")],1),e._v(" 感兴趣。虽然当时并没有开源，并且有许多地方发生了变化，但看到这一切的开始还是挺有意思的。")]),e._v(" "),t("p",[e._v("这里有一个 "),t("a",{attrs:{href:"https://github.com/facebook/AsyncDisplayKit/issues/1582",target:"_blank",rel:"noopener noreferrer"}},[e._v("public Skack channel"),t("OutboundLink")],1),e._v(" ,欢迎来提问~")]),e._v(" "),t("h1",{attrs:{id:"著作权声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#著作权声明"}},[e._v("#")]),e._v(" 著作权声明")]),e._v(" "),t("p",[e._v("本文译自 "),t("a",{attrs:{href:"https://www.raywenderlich.com/124311/asyncdisplaykit-2-0-tutorial-getting-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("AsyncDisplayKit 2.0 Tutorial: Getting Started"),t("OutboundLink")],1),e._v(" .")]),e._v(" "),t("p",[e._v("由"),t("a",{attrs:{href:"http://github.com/qiubaiying",target:"_blank",rel:"noopener noreferrer"}},[e._v("@柏荧(BY)"),t("OutboundLink")],1),e._v("进行翻译,首次发布于 "),t("a",{attrs:{href:"http://qiubaiying.github.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("BY Blog"),t("OutboundLink")],1),e._v("，转载请保留原文链接.")])])}),[],!1,null,null,null);a.default=n.exports}}]);