(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{548:function(s,n,e){"use strict";e.r(n);var t=e(6),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("定时器的使用是软件开发基础技能，用于延时执行或重复执行某些方法。")]),s._v(" "),e("p",[s._v("我相信大部分人接触iOS的定时器都是从这段代码开始的:")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSTimer scheduledTimerWithTimeInterval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),s._v(" selector"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" userInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("nil repeats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("YES"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("但是你真的会用吗？")]),s._v(" "),e("h1",{attrs:{id:"正文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[s._v("#")]),s._v(" 正文")]),s._v(" "),e("h2",{attrs:{id:"ios定时器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ios定时器"}},[s._v("#")]),s._v(" iOS定时器")]),s._v(" "),e("p",[s._v("首先来介绍iOS中的定时器")]),s._v(" "),e("p",[s._v("iOS中的定时器大致分为这几类：")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("NSTimer")])]),s._v(" "),e("li",[e("strong",[s._v("CADisplayLink")])]),s._v(" "),e("li",[e("strong",[s._v("GCD定时器")])])]),s._v(" "),e("h3",{attrs:{id:"nstimer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nstimer"}},[s._v("#")]),s._v(" NSTimer")]),s._v(" "),e("h4",{attrs:{id:"使用方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[s._v("#")]),s._v(" 使用方法")]),s._v(" "),e("p",[e("strong",[s._v("NSTime")]),s._v("定时器是我们比较常使用的定时器，比较常使用的方法有两种：")]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSTimer "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("timerWithTimeInterval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSTimeInterval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ti target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aTarget selector"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SEL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aSelector userInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nullable id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("userInfo repeats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BOOL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("yesOrNo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSTimer "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("scheduledTimerWithTimeInterval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NSTimeInterval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ti target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aTarget selector"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SEL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aSelector userInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nullable id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("userInfo repeats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BOOL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("yesOrNo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("这两种方法都是创建一个定时器，区别是用"),e("code",[s._v("timerWithTimeInterval:")]),s._v("方法创建的定时器需要手动加入RunLoop中。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 创建NSTimer对象\nNSTimer *timer = [NSTimer timerWithTimeInterval:3 target:self selector:@selector(timerAction) userInfo:nil repeats:YES];\n// 加入RunLoop中\n[[NSRunLoop mainRunLoop] addTimer:timer forMode:NSDefaultRunLoopMode];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("需要"),e("strong",[s._v("注意")]),s._v("的是： "),e("code",[s._v("UIScrollView")]),s._v(" 滑动时执行的是 "),e("code",[s._v("UITrackingRunLoopMode")]),s._v("，"),e("code",[s._v("NSDefaultRunLoopMode")]),s._v("被挂起，会导致定时器失效，等恢复为"),e("strong",[s._v("滑动结束")]),s._v("时才恢复定时器。其原因可以查看我这篇"),e("a",{attrs:{href:"http://www.jianshu.com/p/c4f552ceda63",target:"_blank",rel:"noopener noreferrer"}},[s._v("《Objective-C RunLoop 详解》"),e("OutboundLink")],1),s._v("中的 “RunLoop 的 Mode“章节，有详细的介绍。")]),s._v(" "),e("p",[s._v("举个例子：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('- (void)startTimer{\n    NSTimer *UIScrollView = [NSTimer timerWithTimeInterval:0.5 target:self selector:@selector(action:) userInfo:nil repeats:YES];\n    [[NSRunLoop mainRunLoop] addTimer:timer forMode:NSDefaultRunLoopMode];\n}\n\n- (void)action:(NSTimer *)sender {\n    static int i = 0;\n    NSLog(@"NSTimer: %d",i);\n    i++;\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("将"),e("code",[s._v("timer")]),s._v("添加到"),e("strong",[s._v("NSDefaultRunLoopMode")]),s._v("中，没0.5秒打印一次，然后滑动"),e("code",[s._v("UIScrollView")]),s._v(".")]),s._v(" "),e("p",[s._v("打印台输出：")]),s._v(" "),e("p",[e("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/2178672-9de097ecc618b498.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),e("p",[s._v("可以看出在滑动"),e("code",[s._v("UIScrollView")]),s._v("时，定时器被暂停了。")]),s._v(" "),e("p",[s._v("所以如果需要定时器在 "),e("code",[s._v("UIScrollView")]),s._v(" 拖动时也不影响的话，有两种解决方法")]),s._v(" "),e("ol",[e("li",[e("strong",[s._v("timer")]),s._v("分别添加到 "),e("code",[s._v("UITrackingRunLoopMode")]),s._v(" 和 "),e("code",[s._v("NSDefaultRunLoopMode")]),s._v("中")])]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSRunLoop mainRunLoop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" addTimer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("timer forMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("NSDefaultRunLoopMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSRunLoop mainRunLoop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" addTimer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("timer forMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" UITrackingRunLoopMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("直接将"),e("strong",[s._v("timer")]),s._v("添加到"),e("code",[s._v("NSRunLoopCommonModes")]),s._v(" 中：")])]),s._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NSRunLoop mainRunLoop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" addTimer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("timer forMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NSRunLoopCommonModes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("但并不是都"),e("strong",[s._v("timer")]),s._v("所有的需要在滑动"),e("code",[s._v("UIScrollView")]),s._v("时继续执行，比如使用"),e("strong",[s._v("NSTimer")]),s._v("完成的帧动画，滑动"),e("code",[s._v("UIScrollView")]),s._v("时就可以停止帧动画，保证滑动的流程性。")]),s._v(" "),e("p",[s._v("若没有特殊要求的话，一般使用第二种方法创建完"),e("strong",[s._v("timer")]),s._v("，会自动添加到"),e("code",[s._v("NSDefaultRunLoopMode")]),s._v("中去执行，也是平时最常用的方法。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("NSTimer *timer = [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(action:) userInfo:nil repeats:YES];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("参数：")]),s._v(" "),e("p",[e("code",[s._v("TimeInterval")]),s._v("：延时时间")]),s._v(" "),e("p",[e("code",[s._v("target")]),s._v(":目标对象，一般就是"),e("code",[s._v("self")]),s._v("本身")]),s._v(" "),e("p",[e("code",[s._v("selector")]),s._v(":执行方法")]),s._v(" "),e("p",[e("code",[s._v("userInfo")]),s._v(":传入信息")]),s._v(" "),e("p",[e("code",[s._v("repeats")]),s._v(":是否重复执行")]),s._v(" "),e("p",[s._v("以上创建的定时器，若"),e("code",[s._v("repeats")]),s._v("参数设为"),e("code",[s._v("NO")]),s._v("，执行一次后就会被释放掉;")]),s._v(" "),e("p",[s._v("若"),e("code",[s._v("repeats")]),s._v("参数设为"),e("code",[s._v("YES")]),s._v("重复执行时，必须手动关闭，否则定时器不会释放(停止）。")]),s._v(" "),e("p",[s._v("释放方法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 停止定时器\n[timer invalidate];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("实际开发中，我们会将"),e("code",[s._v("NSTimer")]),s._v("对象设置为属性，这样方便释放。")]),s._v(" "),e("p",[e("strong",[s._v("iOS10.0")]),s._v(" 推出了两个新的API，与上面的方法相比，"),e("code",[s._v("selector")]),s._v("换成Block回调以、减少传入的参数(那几个参数真是鸡肋)。不过开发中一般需要适配低版本，还是尽量使用上面的方法吧。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("+ (NSTimer *)timerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block API_AVAILABLE(macosx(10.12), ios(10.0), watchos(3.0), tvos(10.0));\n\n+ (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block API_AVAILABLE(macosx(10.12), ios(10.0), watchos(3.0), tvos(10.0));\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("###特点")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("必须加入Runloop")])]),s._v(" "),e("p",[s._v("上面不管使用哪种方法，实际最后都会加入RunLoop中执行，区别就在于是否手动加入而已。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("存在延迟")])]),s._v(" "),e("p",[s._v("不管是一次性的还是周期性的timer的实际触发事件的时间，都会与所加入的RunLoop和RunLoop Mode有关，如果此RunLoop正在执行一个连续性的运算，timer就会被延时出发。重复性的timer遇到这种情况，如果延迟超过了一个周期，则会在延时结束后立刻执行，并按照之前指定的周期继续执行，这个延迟时间大概为50-100毫秒.")]),s._v(" "),e("p",[s._v("所以NSTimer不是绝对准确的,而且中间耗时或阻塞错过下一个点,那么下一个点就pass过去了.")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("UIScrollView滑动会暂停计时")])]),s._v(" "),e("p",[s._v("添加到"),e("code",[s._v("NSDefaultRunLoopMode")]),s._v("的 "),e("code",[s._v("timer")]),s._v(" 在 "),e("code",[s._v("UIScrollView")]),s._v("滑动时会暂停，若不想被"),e("code",[s._v("UIScrollView")]),s._v("滑动影响，需要将 "),e("code",[s._v("timer")]),s._v(" 添加再到 "),e("code",[s._v("UITrackingRunLoopMode")]),s._v(" 或 直接添加到"),e("code",[s._v("NSRunLoopCommonModes")]),s._v(" 中")])])]),s._v(" "),e("p",[s._v("##CADisplayLink")]),s._v(" "),e("p",[s._v("CADisplayLink官方介绍：")]),s._v(" "),e("blockquote",[e("p",[s._v("A CADisplayLink object is a timer object that allows your application to synchronize its drawing to the refresh rate of the display")])]),s._v(" "),e("p",[e("strong",[s._v("CADisplayLink")]),s._v("对象是一个和屏幕刷新率同步的定时器对象。每当屏幕显示内容刷新结束的时候，runloop就会向CADisplayLink指定的"),e("code",[s._v("target")]),s._v("发送一次指定的"),e("code",[s._v("selector")]),s._v("消息， CADisplayLink类对应的 "),e("code",[s._v("selector")]),s._v(" 就会被调用一次。")]),s._v(" "),e("p",[s._v("从原理上可以看出，CADisplayLink适合做界面的不停重绘，比如视频播放的时候需要不停地获取下一帧用于界面渲染，或者做动画。\n###使用方法")]),s._v(" "),e("p",[s._v("创建：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("@property (nonatomic, strong) CADisplayLink *displayLink;\n\nself.displayLink = [CADisplayLink displayLinkWithTarget:self selector:@selector(handleDisplayLink:)];  \n\n// 每隔1帧调用一次\nself.displayLink.frameInterval = 1;  \n\n[self.displayLink addToRunLoop:[NSRunLoop currentRunLoop] forMode:NSDefaultRunLoopMode];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("释放方法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[self.displayLink invalidate];  \n\nself.displayLink = nil;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("当把"),e("strong",[s._v("CADisplayLink")]),s._v("对象添加到runloop中后，"),e("code",[s._v("selector")]),s._v("就能被周期性调用，类似于重复的NSTimer被启动了；执行"),e("code",[s._v("invalidate")]),s._v("操作时，CADisplayLink对象就会从runloop中移除，"),e("code",[s._v("selector")]),s._v("调用也随即停止，类似于NSTimer的"),e("code",[s._v("invalidate")]),s._v("方法。")]),s._v(" "),e("p",[e("strong",[s._v("CADisplayLink")]),s._v("中有两个重要的属性：")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("frameInterval")])]),s._v(" "),e("p",[s._v("NSInteger类型的值，用来设置间隔多少帧调用一次"),e("code",[s._v("selector")]),s._v("方法，默认值是1，即每帧都调用一次。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("duration")])]),s._v(" "),e("p",[e("code",[s._v("CFTimeInterval")]),s._v("值为"),e("code",[s._v("readOnly")]),s._v("，表示两次屏幕刷新之间的时间间隔。需要注意的是，该属性在"),e("code",[s._v("targe")]),s._v("t的"),e("code",[s._v("selector")]),s._v("被首次调用以后才会被赋值。"),e("code",[s._v("selector")]),s._v("的调用间隔时间计算方式是："),e("strong",[s._v("调用间隔时间 = duration × frameInterval")]),s._v("。")])])]),s._v(" "),e("p",[s._v("###特点")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("刷新频率固定")])]),s._v(" "),e("p",[s._v("正常情况iOS设备的屏幕刷新频率是固定"),e("strong",[s._v("60Hz")]),s._v(",如果CPU过于繁忙，无法保证屏幕60次/秒的刷新率，就会导致跳过若干次调用回调方法的机会，跳过次数取决CPU的忙碌程度。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("屏幕刷新时调用")])]),s._v(" "),e("p",[s._v("CADisplayLink在正常情况下会在每次刷新结束都被调用，精确度相当高。但如果调用的方法比较耗时，超过了屏幕刷新周期，就会导致跳过若干次回调调用机会")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("适合做界面渲染")])]),s._v(" "),e("p",[s._v("CADisplayLink可以确保系统渲染每一帧的时候我们的方法都被调用，从而保证了动画的流畅性。")])])]),s._v(" "),e("p",[s._v("##GCD定时器")]),s._v(" "),e("p",[e("strong",[s._v("GCD定时器")]),s._v("和NSTimer是不一样的，NSTimer受RunLoop影响，但是GCD的定时器不受影响，因为通过源码可知RunLoop也是基于GCD的实现的，所以GCD定时器有非常高的精度。关于GCD的使用可一看看"),e("a",{attrs:{href:"http://www.cnblogs.com/pure/archive/2013/03/31/2977420.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇博客"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("###使用方法\n创建GCD定时器定时器的方法稍微比较复杂，看下面的代码：")]),s._v(" "),e("p",[s._v("####单次的延时调用\nNSObject中的"),e("code",[s._v("performSelector:withObject:afterDelay:")]),s._v("以及 "),e("code",[s._v("performSelector:withObject:afterDelay:inModes:")]),s._v(" 这两个方法在调用的时候会设置当前 runloop 中 "),e("code",[s._v("timer")]),s._v(" ，前者设置的 "),e("code",[s._v("timer")]),s._v(" 在 "),e("code",[s._v("NSDefaultRunLoopMode")]),s._v(" 运行，后者则可以指定 "),e("strong",[s._v("NSRunLoop")]),s._v(" 的 "),e("code",[s._v("mode")]),s._v(" 来执行。我们上面介绍过 runloop 中 "),e("code",[s._v("timer")]),s._v(" 在 "),e("code",[s._v("UITrackingRunLoopMode")]),s._v(" 被挂起，就导致了代码就会一直等待 "),e("code",[s._v("timer")]),s._v(" 的调度,解决办法在上面也有说明。")]),s._v(" "),e("p",[s._v("不过我们可以用另一套方案来解决这个问题，就是使用GCD中的 "),e("code",[s._v("dispatch_after")]),s._v(" 来实现单次的延时调用：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("double delayInSeconds = 2.0;\n    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC_PER_SEC));\n    dispatch_after(popTime, dispatch_get_main_queue(), ^(void){\n        [self someMethod];\n    });\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("####循环调用")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 创建GCD定时器\ndispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n\ndispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);\n\ndispatch_source_set_timer(_timer, dispatch_walltime(NULL, 0), 1.0 * NSEC_PER_SEC, 0); //每秒执行\n\n// 事件回调\ndispatch_source_set_event_handler(_timer, ^{\n        \n    dispatch_async(dispatch_get_main_queue(), ^{\n        // 在主线程中实现需要的功能\n        \n\t}\n}\n    \n});\n\n// 开启定时器\ndispatch_resume(_timer);\n\n// 挂起定时器（dispatch_suspend 之后的 Timer，是不能被释放的！会引起崩溃）\ndispatch_suspend(_timer);\n\n// 关闭定时器\ndispatch_source_cancel(_timer);\n    \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[s._v("上面代码中要注意的是：")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("dispatch_source_set_event_handler()")]),s._v("中的任务实在子线程中执行的，若需要回到主线程，要调用"),e("code",[s._v("dispatch_async(dispatch_get_main_queue(), ^{}")]),s._v(".")])]),s._v(" "),e("ul",[e("li",[e("p",[e("code",[s._v("dispatch_source_set_timer")]),s._v(" 中第二个参数，当我们使用 "),e("code",[s._v("dispatch_time")]),s._v(" 或者 "),e("code",[s._v("DISPATCH_TIME_NOW")]),s._v(" 时，系统会使用默认时钟来进行计时。然而当系统休眠的时候，默认时钟是不走的，也就会导致计时器停止。使用 "),e("code",[s._v("dispatch_walltime")]),s._v(" 可以让计时器按照真实时间间隔进行计时.")])]),s._v(" "),e("li",[e("p",[s._v("第三个参数， "),e("code",[s._v("1.0 * NSEC_PER_SEC")]),s._v(" 为每秒执行一次，对应的还有毫秒，分秒，纳秒可以选择.")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("dispatch_source_set_event_handler")]),s._v(" 这个函数在执行完之后，block 会立马执行一遍，后面隔一定时间间隔再执行一次。而 "),e("code",[s._v("NSTimer")]),s._v(" 第一次执行是到计时器触发之后。这也是和 "),e("code",[s._v("NSTimer")]),s._v(" 之间的一个显著区别。")])]),s._v(" "),e("li",[e("p",[s._v("挂起（暂停）定时器, "),e("code",[s._v("dispatch_suspend")]),s._v(" 之后的 "),e("code",[s._v("Timer")]),s._v("，不能被释放的,会引起崩溃.")])]),s._v(" "),e("li",[e("p",[s._v("创建的"),e("code",[s._v("timer")]),s._v("一定要有"),e("code",[s._v("dispatch_suspend(_timer)")]),s._v("或"),e("code",[s._v("dispatch_source_cancel(_timer)")]),s._v("这两句话来指定出口，否则定时器将不执行，若我们想无限循环可将 "),e("code",[s._v("dispatch_source_cancel(_timer)")]),s._v(" 写在一句永不执行的"),e("code",[s._v("if")]),s._v("判断语句中。")])])]),s._v(" "),e("p",[s._v("##使用场景")]),s._v(" "),e("p",[s._v("介绍完iOS中的各种定时器，接下来我们来说说这几种定时器在开发中的几种用法。\n###短信重发倒计时")]),s._v(" "),e("p",[s._v("短信倒计时使我们登录注册常用的功能，一般设置为60s，实现方法如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 计时时间\n@property (nonatomic, assign) int timeout;\n\n/** 开启倒计时 */\n- (void)startCountdown {\n    \n    if (_timeout > 0) {\n        return;\n    }\n    \n    _timeout = 60;\n    \n    // GCD定时器\n    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n    \n    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, queue);\n    \n    dispatch_source_set_timer(_timer, dispatch_walltime(NULL, 0), 1.0 * NSEC_PER_SEC, 0); //每秒执行\n    \n    dispatch_source_set_event_handler(_timer, ^{\n        \n        if(_timeout <= 0 ){// 倒计时结束\n            \n            // 关闭定时器\n            dispatch_source_cancel(_timer);\n            \n            dispatch_async(dispatch_get_main_queue(), ^{\n                \n                //设置界面的按钮显示 根据自己需求设置\n                [self.sendMsgBtn setTitle:@"发送" forState:UIControlStateNormal];\n                \n                self.sendMsgBtn.enabled = YES;\n                \n            });\n            \n        }else{// 倒计时中\n            \n            // 显示倒计时结果\n            \n            NSString *strTime = [NSString stringWithFormat:@"重发(%.2d)", _timeout];\n            \n            dispatch_async(dispatch_get_main_queue(), ^{\n                \n                //设置界面的按钮显示 根据自己需求设置\n                \n                [self.sendMsgBtn setTitle:[NSString stringWithFormat:@"%@",strTime] forState:UIControlStateNormal];\n                \n                self.sendMsgBtn.enabled = NO;\n                \n            });\n            \n            _timeout--;\n        }\n    });\n    \n    // 开启定时器\n    dispatch_resume(_timer);\n    \n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br")])]),e("p",[s._v("在上面代码中，我们设置了一个60s循环倒计时，当我们向服务器获取短信验证码成功时 调用该方法开始倒计时。每秒刷新按钮的倒计时数，倒计时结束时再将按钮 "),e("code",[s._v("Title")]),s._v(" 恢复为“发送”.")]),s._v(" "),e("p",[s._v("有一点需要注意的是，按钮的样式要设置为 "),e("strong",[s._v("UIButtonTypeCustom")]),s._v(",否则会出现刷新 "),e("code",[s._v("Title")]),s._v(" 时闪烁.")]),s._v(" "),e("p",[s._v("我们可以把这个方法封装一下，方便调用，否则在控制器中写这么一大段代码确实也不优雅。")]),s._v(" "),e("p",[s._v("效果如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/2178672-3d4d1353bcc36026.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),e("h5",{attrs:{id:"代码链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码链接"}},[s._v("#")]),s._v(" "),e("a",{attrs:{href:"https://github.com/qiubaiying/BYTimer",target:"_blank",rel:"noopener noreferrer"}},[s._v("代码链接"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("###每个几分钟向服务器发送数据")]),s._v(" "),e("p",[s._v("在有定位服务的APP中，我们需要每个一段时间将定位数据发送到服务器，比如每5s定位一次每隔5分钟将再统一将数据发送服务器，这样会处理比较省电。\n一般程序进入后台时，定时器会停止，但是在定位APP中，需要持续进行定位，APP在后台时依旧可以运行，所以在后台定时器也是可以运行的。")]),s._v(" "),e("p",[s._v("注：关于iOS后台常驻,可以查看"),e("a",{attrs:{href:"http://waitingyuan.blog.163.com/blog/static/2155781652014111133150534/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇博客"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("在使用GCD定时的时候发现GCD定时器也可以在后代运行，创建方法同上面的短信倒计时.")]),s._v(" "),e("p",[s._v("这里我们使用"),e("strong",[s._v("NSTimer")]),s._v("来创建一个每个5分钟执行一次的定时器.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#import <Foundation/Foundation.h>\n\ntypedef void(^TimerBlock)();\n\n@interface BYTimer : NSObject\n\n- (void)startTimerWithBlock:(TimerBlock)timerBlock;\n\n- (void)stopTimer;\n\n@end\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('#import "BYTimer.h"\n\n@interface BYTimer ()\n\n@property (nonatomic, strong) NSTimer *timer;\n@property (nonatomic, strong) TimerBlock timerBlock;\n\n@end\n\n@implementation BYTimer\n\n- (void)startTimerWithBlock:(TimerBlock)timerBlock {\n\n\t self.timer = [NSTimer timerWithTimeInterval:300 target:self selector:@selector(_timerAction) userInfo:nil repeats:YES];\n\t \n    [[NSRunLoop mainRunLoop] addTimer:self.timer forMode:NSRunLoopCommonModes];\n    _timerBlock = timerBlock;\n    \n}\n\n- (void)_timerAction {\n    if (self.timerBlock) {\n        self.timerBlock();\n    }\n}\n\n- (void)stopTimer {\n    [self.timer invalidate];\n}\n\n@end\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[s._v("该接口的实现很简单，就是 "),e("strong",[s._v("NSTimer")]),s._v(" 创建了一个300s执行一次的定时器，但是要注意定时器需要加入"),e("code",[s._v("NSRunLoopCommonModes")]),s._v("中。")]),s._v(" "),e("p",[s._v("要使定时器在后台能运行，app 就需要在 "),e("a",{attrs:{href:"http://waitingyuan.blog.163.com/blog/static/2155781652014111133150534/",target:"_blank",rel:"noopener noreferrer"}},[s._v("后台常驻"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("h1",{attrs:{id:"结语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),e("p",[s._v("最后总结一下：")]),s._v(" "),e("p",[s._v("NSTimer 使用简单方便，但是应用条件有限。")]),s._v(" "),e("p",[s._v("CADisplayLink 刷新频率与屏幕帧数相同，用于绘制动画。具体使用可看我封装好的一个 "),e("a",{attrs:{href:"https://github.com/qiubaiying/WaterRippleView",target:"_blank",rel:"noopener noreferrer"}},[s._v("水波纹动画"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("GCD定时器 精度高，可控性强，使用稍复杂。")])])}),[],!1,null,null,null);n.default=a.exports}}]);